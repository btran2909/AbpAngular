{
  "generated": [
    "app"
  ],
  "modules": {
    "app": {
      "rootPath": "app",
      "remoteServiceName": "Default",
      "controllers": {
        "AbpAngular.Controllers.Companies.companyController": {
          "controllerName": "company",
          "type": "AbpAngular.Controllers.Companies.companyController",
          "interfaces": [
            {
              "type": "AbpAngular.Companies.IcompanyAppService"
            }
          ],
          "actions": {
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/companies",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "AbpAngular.Companies.GetcompaniesInput, AbpAngular.Application.Contracts",
                  "type": "AbpAngular.Companies.GetcompaniesInput",
                  "typeSimple": "AbpAngular.Companies.GetcompaniesInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FilterText",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "CompanyName",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Description",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<AbpAngular.Companies.companyDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<AbpAngular.Companies.companyDto>"
              }
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/companies/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AbpAngular.Companies.companyDto",
                "typeSimple": "AbpAngular.Companies.companyDto"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/companies",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "AbpAngular.Companies.companyCreateDto, AbpAngular.Application.Contracts",
                  "type": "AbpAngular.Companies.companyCreateDto",
                  "typeSimple": "AbpAngular.Companies.companyCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "AbpAngular.Companies.companyCreateDto",
                  "typeSimple": "AbpAngular.Companies.companyCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AbpAngular.Companies.companyDto",
                "typeSimple": "AbpAngular.Companies.companyDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/companies/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "AbpAngular.Companies.companyUpdateDto, AbpAngular.Application.Contracts",
                  "type": "AbpAngular.Companies.companyUpdateDto",
                  "typeSimple": "AbpAngular.Companies.companyUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "AbpAngular.Companies.companyUpdateDto",
                  "typeSimple": "AbpAngular.Companies.companyUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AbpAngular.Companies.companyDto",
                "typeSimple": "AbpAngular.Companies.companyDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/companies/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "AbpAngular.Controllers.Customers.customerController": {
          "controllerName": "customer",
          "type": "AbpAngular.Controllers.Customers.customerController",
          "interfaces": [
            {
              "type": "AbpAngular.Customers.IcustomerAppService"
            }
          ],
          "actions": {
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/customers",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "AbpAngular.Customers.GetcustomersInput, AbpAngular.Application.Contracts",
                  "type": "AbpAngular.Customers.GetcustomersInput",
                  "typeSimple": "AbpAngular.Customers.GetcustomersInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "FilterText",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "LicenseNo",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "LicenseExpiredMin",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "LicenseExpiredMax",
                  "jsonName": null,
                  "type": "System.DateTime?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Address",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "City",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "ZipCode",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Country",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Email",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Website",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Telephone",
                  "jsonName": null,
                  "type": "System.String?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "jsonName": null,
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<AbpAngular.Customers.customerDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<AbpAngular.Customers.customerDto>"
              }
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/customers/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AbpAngular.Customers.customerDto",
                "typeSimple": "AbpAngular.Customers.customerDto"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/customers",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "AbpAngular.Customers.customerCreateDto, AbpAngular.Application.Contracts",
                  "type": "AbpAngular.Customers.customerCreateDto",
                  "typeSimple": "AbpAngular.Customers.customerCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "AbpAngular.Customers.customerCreateDto",
                  "typeSimple": "AbpAngular.Customers.customerCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AbpAngular.Customers.customerDto",
                "typeSimple": "AbpAngular.Customers.customerDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/customers/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "AbpAngular.Customers.customerUpdateDto, AbpAngular.Application.Contracts",
                  "type": "AbpAngular.Customers.customerUpdateDto",
                  "typeSimple": "AbpAngular.Customers.customerUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "AbpAngular.Customers.customerUpdateDto",
                  "typeSimple": "AbpAngular.Customers.customerUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "AbpAngular.Customers.customerDto",
                "typeSimple": "AbpAngular.Customers.customerDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/customers/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "jsonName": null,
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    }
  },
  "types": {
    "AbpAngular.Shared.LookupRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Shared.LookupDto<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Companies.GetcompaniesInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FilterText",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CompanyName",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": true
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Companies.companyDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRef": false,
          "isRequired": true
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Companies.companyCreateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRef": false,
          "isRequired": true
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Companies.companyUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CompanyName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRef": false,
          "isRequired": true
        },
        {
          "name": "Description",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Sorting",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.LimitedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SkipCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.LimitedResultRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DefaultMaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MaxMaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MaxResultCount",
          "jsonName": null,
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ListResultDto<T>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "TotalCount",
          "jsonName": null,
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ListResultDto<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Items",
          "jsonName": null,
          "type": "[T]",
          "typeSimple": "[T]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.FullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DeleterId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DeletionTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.AuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "LastModifierId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "jsonName": null,
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CreatorId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "jsonName": null,
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "AbpAngular.Users.AppUserDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Identity.IdentityUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "jsonName": null,
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "UserName",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmailConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumberConfirmed",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "SupportTwoFactor",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "LockoutEnabled",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsLockedOut",
          "jsonName": null,
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "ConcurrencyStamp",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Customers.GetcustomersInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FilterText",
          "jsonName": null,
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LicenseNo",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "LicenseExpiredMin",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "LicenseExpiredMax",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Address",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "City",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ZipCode",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Website",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Telephone",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Customers.customerDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "LicenseNo",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "LicenseExpired",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Address",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "City",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "ZipCode",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Website",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Telephone",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Customers.customerCreateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "LicenseNo",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "LicenseExpired",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Address",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "City",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "ZipCode",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Website",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Telephone",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        }
      ]
    },
    "AbpAngular.Customers.customerUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "LicenseNo",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "LicenseExpired",
          "jsonName": null,
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Address",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "City",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "ZipCode",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Country",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Email",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Website",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        },
        {
          "name": "Telephone",
          "jsonName": null,
          "type": "System.String?",
          "typeSimple": "string?",
          "isRef": false,
          "isRequired": false
        }
      ]
    }
  }
}